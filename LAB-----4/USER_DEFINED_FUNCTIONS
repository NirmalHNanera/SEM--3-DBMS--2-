--1. Create a table valued function which accepts DepartmentID as a parameter & returns a worker table based on DepartmentID.
	
	Create Function FN_Person_DepartmentID(@departmentID	int)
	Returns Table
	as
	
		Return(
			Select * 
			From Person
			Where DepartmentID = @departmentID
		)

	Select * From FN_Person_DepartmentID(1)

	

--2. Create a table valued function which returns a table with unique city names from worker table.

	Create Function FN_Person_uniqueCity()
	Returns Table
	as

		Return(
			Select Distinct  WorkerID, FirstName, LastName, Salary, JoiningDate, DepartmentID, DesignationID 
			From Person
		)

	Select * From FN_Person_uniqueCity()



--3. Create a scalar valued function which accepts two parameters start date & end date, and returns a date difference in days.

	Create Function FN_DateDiff_Days(
		@startDate date,
		@endDate date
	)
	Returns int
	as
	Begin
		Return DateDiff(day, @startDate, @endDate)
	End

	Select dbo.FN_DateDiff_Days('2022-07-08', '2022-08-08')



--4. Create a scalar valued function which accepts two parameters year in integer & month in integer and returns total days in passed month & year.

	Create Function FN_NumberOfTotalDays(
		@year	int,
		@month	int 
	)
	Returns int
	as
	Begin
		Declare @y	int,
				@m	int,
				@d	int

			set	@y = (@year * 365);
			set @m = (@month * 365) / 12;
			set @d = @y + @m;

			Return @d
	End

	Select dbo.FN_NumberOfTotalDays(1,6)



--5. Create a scalar valued function which accepts two parameters year in integer & month in integer and returns first date in passed month & year.

	CREATE Function FN_FirstDate(
		@month	int,
		@year	int 
	)	
	Returns varchar(25)
	as
	Begin
		Return (
			Select '01 - ' + Convert(varchar(10), @month) + ' - ' + Convert(varchar(10), @year)
		)
	End

	Select dbo.FN_FirstDate(9, 2025)

	-- Select DATEADD(year, DATEDIFF(year, 0, GETDATE()), 0) AS StartOfYear
